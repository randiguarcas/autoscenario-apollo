generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model spatial_ref_sys {
  srid      Int     @id
  auth_name String? @db.VarChar(256)
  auth_srid Int?
  srtext    String? @db.VarChar(2048)
  proj4text String? @db.VarChar(2048)
}

model make {
  id                 String           @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  name               String
  enabled            Boolean
  source_provider_id String?          @db.Uuid
  code               String?
  slug               String?
  logo               String?
  created_at         DateTime?        @default(now()) @db.Timestamp(6)
  created_by         String?
  updated_at         DateTime?        @default(now()) @db.Timestamp(6)
  updated_by         String?
  source_provider    source_provider? @relation(fields: [source_provider_id], references: [id], onDelete: Restrict, onUpdate: Restrict)
  model              model[]
}

model source_provider {
  id         String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  name       String
  api_key    String?
  base_url   String?
  created_at DateTime  @default(now()) @db.Timestamp(6)
  created_by String
  updated_at DateTime? @default(now()) @db.Timestamp(6)
  updated_by DateTime? @db.Timestamp(6)
  enabled    Boolean
  make       make[]
}

model model {
  id         String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  name       String
  code       String?
  enabled    Boolean
  slug       String?
  make_id    String    @db.Uuid
  created_at DateTime  @default(now()) @db.Timestamptz(6)
  created_by String
  updated_at DateTime? @default(now()) @db.Timestamptz(6)
  updated_by String?
  make       make      @relation(fields: [make_id], references: [id], onUpdate: Restrict)
}
